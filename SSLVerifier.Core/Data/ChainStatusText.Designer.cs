//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSLVerifier.Core.Data {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ChainStatusText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ChainStatusText() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SSLVerifier.Core.Data.ChainStatusText", typeof(ChainStatusText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate is about to expire..
        /// </summary>
        internal static string AboutExpire {
            get {
                return ResourceManager.GetString("AboutExpire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested endpoint does not provide SSL/TLS certificate..
        /// </summary>
        internal static string CertificateNotFound {
            get {
                return ResourceManager.GetString("CertificateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A CTL used to create this chain did not have a valid signature..
        /// </summary>
        internal static string CtlNotSignatureValid {
            get {
                return ResourceManager.GetString("CtlNotSignatureValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A certificate trust list (CTL) used to create this chain was not time valid..
        /// </summary>
        internal static string CtlNotTimeValid {
            get {
                return ResourceManager.GetString("CtlNotTimeValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A CTL used to create this chain is not valid for this usage..
        /// </summary>
        internal static string CtlNotValidForUsage {
            get {
                return ResourceManager.GetString("CtlNotValidForUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate was issued by a certification authority that the original certificate had certified..
        /// </summary>
        internal static string Cyclic {
            get {
                return ResourceManager.GetString("Cyclic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate is explicitly distrusted..
        /// </summary>
        internal static string ExplicitDistrust {
            get {
                return ResourceManager.GetString("ExplicitDistrust", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate has a name constraints extension, and one of the name choices in the end certificate is explicitly excluded..
        /// </summary>
        internal static string HasExcludedNameConstraint {
            get {
                return ResourceManager.GetString("HasExcludedNameConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate has a name constraints extension and a name constraint is missing for one of the name choices in the end certificate..
        /// </summary>
        internal static string HasNotDefinedNameConstraint {
            get {
                return ResourceManager.GetString("HasNotDefinedNameConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate has a name constraints extension, and there is not a permitted name constraint for one of the name choices in the end certificate..
        /// </summary>
        internal static string HasNotPermittedNameConstraint {
            get {
                return ResourceManager.GetString("HasNotPermittedNameConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate does not support a critical extension..
        /// </summary>
        internal static string HasNotSupportedCriticalExtension {
            get {
                return ResourceManager.GetString("HasNotSupportedCriticalExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate has a name constraints extension that contains unsupported fields..
        /// </summary>
        internal static string HasNotSupportedNameConstraint {
            get {
                return ResourceManager.GetString("HasNotSupportedNameConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate has not been strong signed..
        /// </summary>
        internal static string HasWeakSignature {
            get {
                return ResourceManager.GetString("HasWeakSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate has a basic constraints extension, and either the certificate cannot be used to issue other certificates, or the chain path length has been exceeded..
        /// </summary>
        internal static string InvalidBasicConstraints {
            get {
                return ResourceManager.GetString("InvalidBasicConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate has an extension that is not valid..
        /// </summary>
        internal static string InvalidExtension {
            get {
                return ResourceManager.GetString("InvalidExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate has a name constraints extension that is not valid..
        /// </summary>
        internal static string InvalidNameConstraints {
            get {
                return ResourceManager.GetString("InvalidNameConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate ohas a policy constraints extension, and one of the issued certificates has a disallowed policy mapping extension or does not have a required issuance policies extension..
        /// </summary>
        internal static string InvalidPolicyConstraints {
            get {
                return ResourceManager.GetString("InvalidPolicyConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subject Alternative Name extension is not presented in certificate..
        /// </summary>
        internal static string MissingAltNameExtension {
            get {
                return ResourceManager.GetString("MissingAltNameExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate presented by endpoint was issued for a different website&apos;s address..
        /// </summary>
        internal static string NameMismatch {
            get {
                return ResourceManager.GetString("NameMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No error found for this certificate or chain..
        /// </summary>
        internal static string NoError {
            get {
                return ResourceManager.GetString("NoError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The end certificate does not have any resultant issuance policies, and one of the issuing certification authority certificates has a policy constraints extension requiring it..
        /// </summary>
        internal static string NoIssuanceChainPolicy {
            get {
                return ResourceManager.GetString("NoIssuanceChainPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate is not published in Certificate Transparency Log.
        /// </summary>
        internal static string NotInTransparencyLog {
            get {
                return ResourceManager.GetString("NotInTransparencyLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate does not have a valid signature..
        /// </summary>
        internal static string NotSignatureValid {
            get {
                return ResourceManager.GetString("NotSignatureValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate validity is not nested within issuer validity..
        /// </summary>
        internal static string NotTimeNested {
            get {
                return ResourceManager.GetString("NotTimeNested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate is not time valid..
        /// </summary>
        internal static string NotTimeValid {
            get {
                return ResourceManager.GetString("NotTimeValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate is not valid for its proposed usage..
        /// </summary>
        internal static string NotValidForUsage {
            get {
                return ResourceManager.GetString("NotValidForUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The revocation function was unable to check revocation because the revocation server was offline..
        /// </summary>
        internal static string OfflineRevocation {
            get {
                return ResourceManager.GetString("OfflineRevocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate chain is not complete..
        /// </summary>
        internal static string PartialChain {
            get {
                return ResourceManager.GetString("PartialChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The revocation function was unable to check revocation for the certificate..
        /// </summary>
        internal static string RevocationStatusUnknown {
            get {
                return ResourceManager.GetString("RevocationStatusUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate is revoked..
        /// </summary>
        internal static string Revoked {
            get {
                return ResourceManager.GetString("Revoked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate validity exceeds CAB/Forum or Internet PKI standards..
        /// </summary>
        internal static string TooLongValidity {
            get {
                return ResourceManager.GetString("TooLongValidity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate and its chain is based on an untrusted root..
        /// </summary>
        internal static string UntrustedRoot {
            get {
                return ResourceManager.GetString("UntrustedRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate uses weak RSA asymmetric key..
        /// </summary>
        internal static string WeakRsaPublicKey {
            get {
                return ResourceManager.GetString("WeakRsaPublicKey", resourceCulture);
            }
        }
    }
}
